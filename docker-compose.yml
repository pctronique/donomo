
services:
###########################
# Setup the nodejs container
###########################
    nodejs:
        container_name: ${NAME_PROJECT}_nodejs
        restart: always
        tty: true
        stdin_open: true
        build: 
            context: .docker/nodejs
            args:
                - VALUE_NODEJS_VERSION=${VALUE_NODEJS_VERSION}
                - NAME_PROJECT=${NAME_PROJECT}
                - NAME_JS_SERVER=${NAME_JS_SERVER}
        depends_on:
            - mongo
        volumes:
            - ./www/:/home/project/www
            - ./config/connection_server.json:/home/project/www/${FOLDER_CONFIG}/connection_server.json:rw
            - ./config/connection_mongo.json:/home/project/www/${FOLDER_CONFIG}/connection_mongo.json:rw
            - ./config/config_email.json:/home/project/www/${FOLDER_CONFIG}/config_email.json:rw
            - ./.docker/nodejs/startserver:/etc/init.d/startserver:rw
            - ./.docker/nodejs/updateProject.sh:/home/updateProject.sh:rw
            - ./.env:/home/.env:rw
            - ./.dockertmp/logs/pm2:/root/.pm2/logs/:rw
            - ./.dockertmp/tmp/nodejs:/var/tmp/nodejs:rw
            - ./.dockertmp/logs/nodejs:/var/log/nodejs/:rw
        command: bash -c "/tmp/project/createProject.sh"
        ports:
            - ${VALUE_NODEJS_PORT}:3000

###########################
# Setup the mongo container
###########################
    mongo:
        container_name: ${NAME_PROJECT}_mongo
        build: 
            context: .docker/mongo
            args:
                - VALUE_SGBD_VERSION=${VALUE_SGBD_VERSION}
        restart: always
        volumes:
            - ./.dockertmp/logs/defmongo:/var/log/defmongo
            - ./.dockertmp/mongo_data:/data/db
            - ./.dockertmp/mongo-seed/:/mongo-seed/
            - ./.env:/mongo-seed/.env
            # start data
            - ./config/0001_people.json:/mongo-seed/0001_people.json
            # end data
            - ./.docker/mongo/import.sh:/mongo-seed/import.sh
        environment:
            - MONGO_INITDB_DATABASE=${SGBD_DATABASE}
            - MONGO_INITDB_ROOT_USERNAME=${SGBD_ROOT_USERNAME}
            - MONGO_INITDB_ROOT_PASSWORD=${SGBD_ROOT_PASSWORD}
        
###########################
# Setup the mongo-express container
###########################
    mongo-express:
        image: mongo-express:${VALUE_MONGOEXP_VERSION}
        container_name: ${NAME_PROJECT}_moexpress
        restart: always
        environment:
            - ME_CONFIG_MONGODB_SERVER=${NAME_PROJECT}_mongo
            - ME_CONFIG_MONGODB_ADMINUSERNAME=${SGBD_ROOT_USERNAME}
            - ME_CONFIG_MONGODB_ADMINPASSWORD=${SGBD_ROOT_PASSWORD}
            - ME_CONFIG_BASICAUTH_USERNAME=${SGBD_ROOT_USERNAME}
            - ME_CONFIG_BASICAUTH_PASSWORD=${SGBD_ROOT_PASSWORD}
            - ME_CONFIG_BASICAUTH=false
            - ME_CONFIG_MONGODB_URL=mongodb://${SGBD_ROOT_USERNAME}:${SGBD_ROOT_PASSWORD}@${NAME_PROJECT}_mongo:27017/?authSource=${SGBD_ROOT_USERNAME}
        depends_on:
        - mongo
        ports:
            - ${VALUE_MONGOEXP_PORT}:8081
        
###########################
# Setup the mailhog container
###########################
    mailhog:
        image: mailhog/mailhog:${VALUE_MAILHOG_VERSION}
        container_name: ${NAME_PROJECT}_mailhog
        restart: always
        ports:
            - ${VALUE_MAILHOG_PORT}:8025
